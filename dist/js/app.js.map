{"version":3,"sources":["app.js"],"names":["gallery","document","querySelector","footer","searchButton","addEventListener","e","searchText","target","previousElementSibling","value","firstChild","removeChild","search","split","join","url","xhr","XMLHttpRequest","open","responseType","onload","readyState","DONE","status","console","log","response","Error","swal","title","text","type","confirmButtonColor","json","Search","i","searchResult","Title","poster","Poster","imdbID","posterImage","galleryHTML","insertAdjacentHTML","xhr2","json2","categorie","Genre","plot","Plot","year","Year","modalHTML","send","length","preventDefault","id","modal","Custombox","content","fullscreen","effect"],"mappings":"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","file":"app.js","sourcesContent":["\"use strict\"\n\nlet gallery = document.querySelector('#js__list');\nlet footer = document.querySelector('#js__footer');\n\n\n//\n// Ajax call to get Movies from omdb api\n//\n\nlet searchButton = document.querySelector('#js__button');\n\nsearchButton.addEventListener('click', (e)=>{\n  let searchText = e.target.previousElementSibling;\n  if(searchText.value){\n    while (gallery.firstChild) {\n      gallery.removeChild(gallery.firstChild);\n    }\n    let search= searchText.value.split(' ').join('+');\n    const url = `https://www.omdbapi.com/?s=${search}&type=movie`;\n\n    let xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'json';\n    xhr.onload = function () {\n      if (xhr.readyState === xhr.DONE) {\n        if (xhr.status === 200) {\n          console.log(xhr.response);\n          if(xhr.response.Error === \"Movie not found!\"){\n            swal({\n              title: \"Movie not found\",\n              text: \"Please check for typo's and try again\",\n              type: \"error\",\n              confirmButtonColor: \"#2a3d45\",\n            });\n          }else{\n            let json = xhr.response.Search;\n            for(let i = 0; i < json.length; i++) {\n              let searchResult = json[i];\n              let title = searchResult.Title;\n              let poster = searchResult.Poster;\n              let imdbID = searchResult.imdbID;\n              let posterImage ='';\n              if(poster === 'N/A'){\n                posterImage =`<svg  class=\"icons\">\n                <use id=\"${imdbID}\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"./img/sprite/sprite.svg#icons--popcorn\"></use>\n              </svg>\n              <h5>${title}</h5>`\n              }else {\n                posterImage =`<img id=\"${imdbID}\" src=\"${poster}\" alt=\"${title}\"/>`\n              }\n              let galleryHTML = `\n              <li class=\"list__item\">\n                <a class=\"list__content\" href=\"${imdbID}\" title=\"${title}\">\n                  ${posterImage}\n                </a>\n              </li>\n              `;\n              gallery.insertAdjacentHTML('afterbegin',galleryHTML);\n\n\n              const url = `https://www.omdbapi.com/?i=${imdbID}`;\n              let xhr2 = new XMLHttpRequest();\n              xhr2.open('GET', url, true);\n              xhr2.responseType = 'json';\n              xhr2.onload = function () {\n                if (xhr2.readyState === xhr2.DONE) {\n                  if (xhr2.status === 200) {\n                    let json2 = xhr2.response;\n                    let searchResult = json2;\n                    let categorie = searchResult.Genre;\n                    let plot = searchResult.Plot;\n                    let title = searchResult.Title;\n                    let year = searchResult.Year;\n                    let poster = searchResult.Poster;\n                    let posterImage ='';\n                    if(poster === 'N/A'){\n                      posterImage =`<svg class=\"icons\">\n                      <use id=\"${imdbID}\"  xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"./img/sprite/sprite.svg#icons--popcorn\"></use>\n                    </svg>`\n                  }else {\n                    posterImage =`<img id=\"${imdbID}\" src=\"${poster}\" alt=\"${title}\"/>`\n                  }\n                  let modalHTML = `\n                  <div id=\"modal__${imdbID}\" class=\"modal\">\n                    <button type=\"button\" class=\"button__modal\" onclick=\"Custombox.modal.closeAll();\">Back</button>\n                    ${posterImage}\n                    <h1>${title}</h1>\n                    <p>${plot}</p>\n                    <span>Year: </span><span>${year}</span>\n                    <span>Categorie: </span><span>${categorie}</span>\n                  </div>\n                  `;\n                  footer.insertAdjacentHTML('afterend',modalHTML);\n                }\n              }\n            }\n            xhr2.send(null);\n          }\n        }\n      }\n    }\n  };\n\n  xhr.send(null);\n  searchText.value ='';\n}\n});\n\n// Open\ngallery.addEventListener('click', (e)=>{\n  e.preventDefault();\n  let imdbID = e.target.id;\n  // Instantiate new modal\n  var modal = new Custombox.modal({\n    content: {\n      fullscreen: true,\n      effect: 'fadein',\n      target: '#modal__'+imdbID\n    }\n  });\n  modal.open();\n});\n"]}